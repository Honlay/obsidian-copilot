{
  "common": {
    "loading": "Loading",
    "save": "Save",
    "cancel": "Cancel",
    "delete": "Delete",
    "edit": "Edit",
    "close": "Close",
    "send": "Send",
    "reset": "Reset",
    "search": "Search",
    "upload": "Upload",
    "download": "Download",
    "copy": "Copy",
    "paste": "Paste",
    "error": "Error",
    "success": "Success",
    "warning": "Warning",
    "info": "Info",
    "apply": "Apply",
    "continue": "Continue"
  },
  "chat": {
    "newChat": "New Chat",
    "clearChat": "Clear Chat",
    "saveChat": "Save Chat",
    "includeActiveNote": "Include Active Note",
    "addContextNotes": "Add Context Notes",
    "sendMessage": "Send Message",
    "typeMessage": "Type a message...",
    "copiedToClipboard": "Copied to clipboard",
    "stop": "Stop",
    "continue": "Continue",
    "regenerate": "Regenerate",
    "uploadImage": "Upload Image",
    "loadingMessages": {
      "default": "",
      "readingFiles": "Reading files",
      "searchingWeb": "Searching the web",
      "readingFileTree": "Reading file tree"
    },
    "inputPlaceholder": {
      "prefix": "Ask anything. [[ for notes. / for custom prompts. ",
      "tools": "@ for tools."
    },
    "dropImages": "Drop images here...",
    "generating": "Generating...",
    "modelLoadFailed": "Model Load Failed",
    "mode": {
      "chat": "chat",
      "vault": "vault"
    },
    "noMessagesToSave": "No messages to save.",
    "timestamp": "Timestamp",
    "untitledChat": "Untitled Chat",
    "chatUpdatedInNote": "Chat updated in existing note: {{fileName}}",
    "chatSavedAsNote": "Chat saved as new note: {{fileName}}",
    "failedToSaveChat": "Failed to save chat as note. Check console for details.",
    "cannotRegenerateFirstMessage": "Cannot regenerate the first message or a user message.",
    "messageRegeneratedSuccess": "Message regenerated successfully",
    "failedToRegenerateMessage": "Failed to regenerate message. Please try again."
  },
  "settings": {
    "title": "Settings",
    "language": "Language",
    "setKeys": "Set Keys",
    "apiKeyRequired": "API key required for chat and QA features",
    "apiKeyDescription": "To enable chat and QA functionality, please provide an API key from your selected provider.",
    "tabs": {
      "basic": "Basic",
      "model": "Model",
      "QA": "QA",
      "command": "Command",
      "advanced": "Advanced"
    },
    "resetSettings": "Reset Settings",
    "resetSettingsConfirm": "Are you sure you want to reset all settings? This action cannot be undone.",
    "copilotSettings": "Copilot Settings",
    "upToDate": "up to date",
    "newVersionAvailable": "A new version is available",
    "updateCheckFailed": "update check failed",
    "defaultChatModel": "Default Chat Model",
    "selectChatModel": "Select the Chat model to use",
    "selectModel": "Select Model",
    "embeddingModel": "Embedding Model",
    "embeddingModels": "Embedding Models",
    "chatModels": "Chat Models",
    "chatModel": "Chat Model",
    "coreFeature": "Core Feature: Powers Semantic Search & QA",
    "embeddingDescription": "This model converts text into vector representations, essential for semantic search and QA functionality. Changing the embedding model will:",
    "rebuildIndex": "Require rebuilding your vault's vector index",
    "affectSearch": "Affect semantic search quality",
    "impactQA": "Impact QA feature performance",
    "defaultMode": "Default Mode",
    "selectDefaultMode": "Select the default chat mode",
    "chatModeDescription": {
      "chat": "Regular chat mode for general conversations and tasks. Free to use with your own API key.",
      "vaultQA": "Ask questions about your vault content with semantic search. Free to use with your own API key.",
      "copilotPlus": "Covers all features of the 2 free modes, plus advanced paid features including chat context menu, advanced search, AI agents, and more. Check out obsidiancopilot.com for more details."
    },
    "openPluginIn": "Open Plugin In",
    "chooseOpenLocation": "Choose where to open the plugin",
    "sidebarView": "Sidebar View",
    "editor": "Editor",
    "defaultConversationFolder": "Default Conversation Folder Name",
    "defaultConversationFolderDesc": "The default folder name where chat conversations will be saved. Default is 'copilot-conversations'",
    "customPromptsFolder": "Custom Prompts Folder Name",
    "customPromptsFolderDesc": "The default folder name where custom prompts will be saved. Default is 'copilot-custom-prompts'",
    "defaultConversationTag": "Default Conversation Tag",
    "defaultConversationTagDesc": "The default tag to be used when saving a conversation. Default is 'ai-conversations'",
    "conversationFilenameTemplate": "Conversation Filename Template",
    "customizeFormat": "Customize the format of saved conversation note names.",
    "templateNote": "Note: All the following variables must be included in the template.",
    "availableVariables": "Available variables:",
    "dateVariable": "Date in YYYYMMDD format",
    "timeVariable": "Time in HHMMSS format",
    "topicVariable": "Chat conversation topic",
    "templateExample": "Example: {$date}_{$time}__{$topic} â†’ 20250114_153232__polish_this_article_[[Readme]]",
    "autosaveChat": "Autosave Chat",
    "autosaveChatDesc": "Automatically save the chat when starting a new one or when the plugin reloads",
    "suggestedPrompts": "Suggested Prompts",
    "suggestedPromptsDesc": "Show suggested prompts in the chat view",
    "relevantNotes": "Relevant Notes",
    "relevantNotesDesc": "Show relevant notes in the chat view",
    "temperature": "Temperature",
    "temperatureDescription": "Default is 0.1. Higher values will result in more creativeness, but also more mistakes. Set to 0 for no randomness.",
    "tokenLimit": "Token Limit",
    "tokenLimitDescription1": "The maximum number of output tokens to generate. Default is 1000.",
    "tokenLimitDescription2": "This number plus the length of your prompt (input tokens) must be smaller than the context window of the model.",
    "conversationTurns": "Conversation Turns in Context",
    "conversationTurnsDescription": "The number of previous conversation turns to include in the context. Default is 15 turns, i.e. 30 messages."
  },
  "copilotPlus": {
    "title": "Copilot Plus (beta)",
    "description": "Copilot Plus takes your Obsidian experience to the next level with cutting-edge AI capabilities. This premium tier unlocks advanced features, including chat context, PDF and image support, web search integration, exclusive chat and embedding models, and much more.",
    "betaNotice": "Currently in beta, Copilot Plus is evolving fast, with new features and improvements rolling out regularly. Join now to secure the lowest price and get early access!",
    "enterLicense": "Enter your license key",
    "joinNow": "Join Now"
  },
  "modelSettings": {
    "apiKeys": "API Keys",
    "openAI": "OpenAI",
    "anthropic": "Anthropic",
    "cohereAI": "CohereAI",
    "googleAI": "Google AI",
    "azureOpenAI": "Azure OpenAI",
    "openRouter": "OpenRouter",
    "groq": "Groq",
    "mistralAI": "MistralAI",
    "models": "Models",
    "model": "Model",
    "provider": "Provider",
    "enabled": "Enabled",
    "actions": "Actions",
    "addCustomModel": "Add Custom Model",
    "capabilities": {
      "title": "Capabilities",
      "reasoning": "This model supports general reasoning tasks.",
      "vision": "This model supports image inputs.",
      "websearch": "This model can access the internet."
    }
  },
  "qaSettings": {
    "strategy": "Strategy",
    "manage": "Manage",
    "autoIndexStrategy": {
      "title": "Auto-Index Strategy",
      "description": "Decide when you want the vault to be indexed.",
      "tooltipHeading": "Choose when to index your vault:",
      "never": {
        "title": "NEVER",
        "description": "Manual indexing via command or refresh only"
      },
      "onStartup": {
        "title": "ON STARTUP",
        "description": "Index updates when plugin loads or reloads"
      },
      "onModeSwitch": {
        "title": "ON MODE SWITCH",
        "description": "Updates when entering QA mode (Recommended)"
      },
      "warning": "Warning: Cost implications for large vaults with paid models"
    },
    "maxSources": {
      "title": "Max Sources",
      "description": "Copilot goes through your vault to find relevant blocks and passes the top N blocks to the LLM. Default for N is 3. Increase if you want more sources included in the answer generation step."
    },
    "requestsPerMinute": {
      "title": "Requests per Minute",
      "description": "Default is 90. Decrease if you are rate limited by your embedding provider."
    },
    "embeddingBatchSize": {
      "title": "Embedding Batch Size",
      "description": "Default is 16. Increase if you are rate limited by your embedding provider."
    },
    "numPartitions": {
      "title": "Number of Partitions",
      "description": "Number of partitions for Copilot index. Default is 1. Increase if you have issues indexing large vaults. Warning: Changes require clearing and rebuilding the index!"
    },
    "exclusions": {
      "title": "Exclusions",
      "description": "Exclude folders, tags, note titles or file extensions from being indexed. Previously indexed files will remain until a force re-index is performed.",
      "manageTitle": "Manage Exclusions"
    },
    "inclusions": {
      "title": "Inclusions",
      "description": "Index only the specified paths, tags, or note titles. Exclusions take precedence over inclusions. Previously indexed files will remain until a force re-index is performed.",
      "manageTitle": "Manage Inclusions"
    },
    "enableIndexSync": {
      "title": "Enable Obsidian Sync for Copilot index",
      "description": "If enabled, the index will be stored in the .obsidian folder and synced with Obsidian Sync by default. If disabled, it will be stored in .copilot-index folder at vault root."
    },
    "disableIndexOnMobile": {
      "title": "Disable index loading on mobile",
      "description": "When enabled, Copilot index won't be loaded on mobile devices to save resources. Only chat mode will be available. Any existing index from desktop sync will be preserved. Uncheck to enable QA modes on mobile."
    }
  },
  "commandSettings": {
    "title": "Custom Commands",
    "description": "To trigger a custom command, highlight text in the editor and select it from the command palette, or right-click and choose it from the context menu if configured.",
    "noModifiedCommandHint": "Take control of your inline edit commands! You can now create your own or edit built-in ones to tailor functionality to your needs.",
    "nameColumn": "Name",
    "inMenuColumn": "In Menu",
    "edit": "Edit",
    "copy": "Copy",
    "copyLabel": "copy",
    "delete": "Delete",
    "addCommand": "Add Command",
    "name": "Name",
    "prompt": "Prompt",
    "promptHelp": "Use <code>{\"copilot-selection\"}</code> as a placeholder for the selected text. If not included, the selected text will be appended to the prompt.",
    "promptRequired": "Prompt is required",
    "enterCommandName": "Enter command name",
    "enterPrompt": "Enter command prompt",
    "modelOptional": "Model (Optional)",
    "inheritFromChatModel": "Inherit from chat model",
    "showInContextMenu": "Show in context menu",
    "editCommand": "Edit Command"
  },
  "advancedSettings": {
    "userSystemPrompt": {
      "title": "User System Prompt",
      "description": "Customize the system prompt for all messages, may result in unexpected behavior!",
      "placeholder": "Enter your system prompt here..."
    },
    "enableEncryption": {
      "title": "Enable Encryption",
      "description": "Enable encryption for the API keys."
    },
    "debugMode": {
      "title": "Debug Mode",
      "description": "Debug mode will log some debug message to the console."
    }
  },
  "apiKeyDialog": {
    "title": "AI Provider Settings",
    "description": "Configure your AI providers by adding their API keys.",
    "getKey": "Get {{provider}} Key",
    "verify": "Verify",
    "verified": "Verified",
    "verificationSuccess": "API key verified successfully!",
    "verificationFailed": "API key verification failed: ",
    "errorNoDefaultTestModel": "API key verification failed: No default test model found for the selected provider."
  },
  "commands": {
    "addCustomPrompt": "Add custom prompt",
    "applyAdhocPrompt": "Apply ad-hoc custom prompt",
    "applyCustomPrompt": "Apply custom prompt",
    "clearLocalCopilotIndex": "Clear local Copilot index",
    "clearCopilotCache": "Clear Copilot cache",
    "countTotalVaultTokens": "Count total tokens in your vault",
    "countWordAndTokensSelection": "Count words and tokens in selection",
    "deleteCustomPrompt": "Delete custom prompt",
    "editCustomPrompt": "Edit custom prompt",
    "findRelevantNotes": "Find relevant notes",
    "forceReindexVault": "Force reindex vault",
    "garbageCollectCopilotIndex": "Garbage collect Copilot index (remove files that no longer exist in vault)",
    "indexVault": "Index (refresh) vault",
    "inspectCopilotIndex": "Inspect Copilot index by note paths (debug)",
    "listIndexedFiles": "List all indexed files (debug)",
    "loadCopilotChatConversation": "Load Copilot chat conversation",
    "openCopilotChatWindow": "Open Copilot Chat Window",
    "removeFilesFromCopilotIndex": "Remove files from Copilot index (debug)",
    "searchOramaDB": "Search OramaDB (debug)",
    "toggleCopilotChatWindow": "Toggle Copilot Chat Window"
  },
  "abort": {
    "userStopped": "user-stopped",
    "newChat": "new-chat"
  },
  "vectorStoreStrategy": {
    "never": "NEVER",
    "onStartup": "ON STARTUP",
    "onModeSwitch": "ON MODE SWITCH"
  },
  "relevantNotes": {
    "title": "Relevant Notes",
    "addToChat": "Add to Chat",
    "similarity": "Similarity",
    "outgoingLinks": "Outgoing links",
    "backlinks": "Backlinks",
    "navigateToNote": "Navigate to Note",
    "reindexed": "Reindexed {{name}}",
    "relevanceExplanation": "Relevance is a combination of semantic similarity and links.",
    "notIndexed": "Note has not been indexed",
    "reindexCurrentNote": "Reindex Current Note",
    "noNotesFound": "No relevant notes found"
  },
  "suggestedPrompts": {
    "title": "Suggested Prompts",
    "addToChat": "Add to Chat",
    "qaInstructions": "Please note that this is a retrieval-based QA. Questions should contain keywords and concepts that exist literally in your vault",
    "indexWarningPrefix": "Your auto-index strategy is set to",
    "indexWarningInstructions": "Before proceeding, click the",
    "refreshIndex": "Refresh Index",
    "indexWarningOr": "button below or run the",
    "indexCommand": "Copilot command: Index (refresh) vault for QA",
    "indexWarningToUpdate": "to update the index.",
    "categories": {
      "activeNote": "Active Note Insights",
      "noteLink": "Note Link Chat",
      "testLLM": "Test LLM",
      "vaultQA": "Vault Q&A",
      "copilotPlus": "Copilot Plus"
    },
    "prompts": {
      "activeNote": {
        "followUpQuestions": "Provide three follow-up questions worded as if I'm asking you based on {activeNote}?",
        "keyQuestions": "What key questions does {activeNote} answer?",
        "quickRecap": "Give me a quick recap of {activeNote} in two sentences."
      },
      "noteLink": {
        "improvements": "Based on [[<note>]], what improvements should we focus on next?",
        "keyPoints": "Summarize the key points from [[<note>]].",
        "recentUpdates": "Summarize the recent updates from [[<note>]].",
        "writingFeedback": "Roast my writing in [[<note>]] and give concrete actionable feedback"
      },
      "testLLM": {
        "comparison": "9.11 and 9.8, which is bigger?",
        "longestRiver": "What's the longest river in the world?",
        "physics": "If a lead ball and a feather are dropped simultaneously from the same height, which will reach the ground first?"
      },
      "vaultQA": {
        "insights": "What insights can I gather about <topic> from my notes?",
        "explain": "Explain <concept> based on my stored notes.",
        "highlight": "Highlight important details on <topic> from my notes.",
        "missingQuestions": "Based on my notes on <topic>, what is the question that I should be asking, but am not?"
      },
      "copilotPlus": {
        "weeklyRecap": "Give me a recap of last week @vault",
        "topicTakeaways": "What are the key takeaways from my notes on <topic> @vault",
        "urlSummary": "Summarize <url> in under 10 bullet points",
        "youtube": "@youtube <video_url>",
        "webSearch": "@web what are most recent updates in the AI industry",
        "paperInsights": "What are the key insights from this paper <arxiv_url>",
        "pdfMethods": "What new methods are proposed in this paper [[<note_with_embedded_pdf>]]"
      }
    }
  },
  "errors": {
    "emptyIndexError": "Copilot index does not exist. Please index your vault first!\n\n1. Set a working embedding model in QA settings. If it's not a local model, don't forget to set the API key. \n\n2. Click 'Refresh Index for Vault' and wait for indexing to complete. If you encounter the rate limiting error, please turn your request per second down in QA setting."
  }
}
